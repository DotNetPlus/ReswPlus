<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AndroidApplicationName" xml:space="preserve">
    <value>Contoso for Android</value>
  </data>
  <data name="AnimalTreat_Variant1_One" xml:space="preserve">
    <value>Reward your pup, give {0} biscuit to {2} the dog!</value>
    <comment>#Format[Plural Double treatNumber, Variant petType, String petName]</comment>
  </data>
  <data name="AnimalTreat_Variant1_Other" xml:space="preserve">
    <value>Reward your pup, give {0} biscuits to {2} the dog!</value>
  </data>
  <data name="AnimalTreat_Variant2_One" xml:space="preserve">
    <value>Reward your kitty, give {0} treat to your cat {2}!</value>
  </data>
  <data name="AnimalTreat_Variant2_Other" xml:space="preserve">
    <value>Reward your kitty, give {0} treats to your cat {2}!</value>
  </data>
  <data name="AppVersion" xml:space="preserve">
    <value>version: {0} v{1}</value>
    <comment>#Format[APP_NAME, VERSION]</comment>
  </data>
  <data name="CopyrightNotice" xml:space="preserve">
    <value>© {0} - {1}. All rights reserved.</value>
    <comment>#Format[YEAR, PUBLISHER_NAME]</comment>
  </data>
  <data name="DonateToAssociation" xml:space="preserve">
    <value>Hey {1}, donate {2:C2} to {0}!</value>
    <comment>#Format["WWF", String username, Int amount]</comment>
  </data>
  <data name="DownloadAndroidApp" xml:space="preserve">
    <value>Click here to download {0}!</value>
    <comment>#Format[AndroidApplicationName()]</comment>
  </data>
  <data name="DownloadOurApp" xml:space="preserve">
    <value>Download our apps in {0}</value>
    <comment>#Format["Microsoft Store"]</comment>
  </data>
  <data name="DriverArrived_Variant1" xml:space="preserve">
    <value>Your driver is here, she is waiting outside. Do you want to message her?</value>
  </data>
  <data name="DriverArrived_Variant2" xml:space="preserve">
    <value>Your driver is here, he is waiting outside. Do you want to message him?</value>
  </data>
  <data name="DriverArrived_Variant3" xml:space="preserve">
    <value>Your driver is here, they are waiting outside. Do you want to message them?</value>
  </data>
  <data name="DriverArrived_Variant4" xml:space="preserve">
    <value>Your driver is here, ze is waiting outside. Do you want to message hir?</value>
  </data>
  <data name="FileShared_One" xml:space="preserve">
    <value>{0} shared {1} photo from {2}</value>
    <comment>#Format[String username, Plural numberPics, String city]</comment>
  </data>
  <data name="FileShared_Other" xml:space="preserve">
    <value>{0} shared {1} photos from {2}</value>
  </data>
  <data name="ForecastAnnouncement" xml:space="preserve">
    <value>The current temperature in {2} is {0}°F ({1}°C)</value>
    <comment>#Format[Int32 tempFahrenheit, Int32 tempCelsius, String city]</comment>
  </data>
  <data name="GotMessages" xml:space="preserve">
    <value>Welcome {0}, you got {1} emails!</value>
    <comment>#Format[String, UInt32]</comment>
  </data>
  <data name="Greeting_Variant1" xml:space="preserve">
    <value>Good morning, enjoy your day!</value>
  </data>
  <data name="Greeting_Variant2" xml:space="preserve">
    <value>Good afternoon, have a good time!</value>
  </data>
  <data name="Greeting_Variant3" xml:space="preserve">
    <value>Good evening, hope your day was fine!</value>
  </data>
  <data name="Greeting_Variant4" xml:space="preserve">
    <value>Good night, sleep well, see you tomorrow!</value>
  </data>
  <data name="HelloUsername" xml:space="preserve">
    <value>Hello &lt;b&gt;{0}&lt;/b&gt;, have a good {1}?</value>
    <comment>#Format[String username, WEEKDAY]</comment>
  </data>
  <data name="LearnMoreAboutAndroidApp" xml:space="preserve">
    <value>To learn more about '{0}', visit our website.</value>
    <comment>#Format[AndroidApplicationName()]</comment>
  </data>
  <data name="MinutesLeft_One" xml:space="preserve">
    <value>{0} minute left</value>
    <comment>#Format[Plural]</comment>
  </data>
  <data name="MinutesLeft_Other" xml:space="preserve">
    <value>{0} minutes left</value>
  </data>
  <data name="PleaseInstallNetFramework" xml:space="preserve">
    <value>Please &lt;b&gt;Install &lt;i&gt;.Net Framework 4.6&lt;/i&gt;&lt;/b&gt; first.</value>
  </data>
  <data name="PluralizationTest_One" xml:space="preserve">
    <value>This is the singular form</value>
  </data>
  <data name="PluralizationTest_Other" xml:space="preserve">
    <value>This is the plural form</value>
  </data>
  <data name="ReceivedMessages_None" xml:space="preserve">
    <value>No new messages from {1}</value>
  </data>
  <data name="ReceivedMessages_One" xml:space="preserve">
    <value>You got {0} message from {1}</value>
    <comment>#Format[Plural, String]</comment>
  </data>
  <data name="ReceivedMessages_Other" xml:space="preserve">
    <value>You got {0} messages from {1}</value>
  </data>
  <data name="SendDocumentToUser" xml:space="preserve">
    <value>Send &lt;i&gt;{0}&lt;/i&gt; to &lt;b&gt;{1}&lt;/b&gt;.</value>
    <comment>#Format[String filename, String username]</comment>
  </data>
  <data name="ThisIsATooltip" xml:space="preserve">
    <value>this is a tooltip text</value>
  </data>
  <data name="UseDesktopBridge" xml:space="preserve">
    <value>Use &lt;strike&gt;Centennial&lt;/strike&gt; Desktop Bridge to convert your app</value>
  </data>
  <data name="WelcomeDownloadApp" xml:space="preserve">
    <value>Hi {0}! Do you want to download {1}?</value>
    <comment>#Format[String username, AndroidApplicationName()]</comment>
  </data>
  <data name="WelcomeMessageDay" xml:space="preserve">
    <value>Welcome {0}! Have a good {1}!</value>
    <comment>#Format[String username, WEEKDAY]</comment>
  </data>
  <data name="WelcomeTitle" xml:space="preserve">
    <value>Hello World!</value>
  </data>
  <data name="YourAgeAndName" xml:space="preserve">
    <value>Your are {0}yo and named {1}!</value>
    <comment>this string is used in the second tab. #Format[Double, String]</comment>
  </data>
</root>